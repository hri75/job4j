
Ситуация, когда для различных ключей получается одно и то же хеш-значение, называется коллизией.
Методы разрешения коллизий:
1. Метод цепочек.
2. Метод открытой адресации.

До Java 8:
----------------
HashMap и другие хэш-таблицы, реализующие интерфейс Map,
использовали LinkedList для хранения элементов в bucket’е (корзине) при возникновении коллизии.

Если ключ попал в bucket (корзину), в котором уже была запись с таким хэш-кодом, но другим ключом, то запись просто добавляется в начало списка.
В худшем случае данный подход ухудшал производительность метода get() с O(1) до O(n) (примечание: O(n) - если все узлы попали в один список).
Это метод цепочек.

В Java 8:
----------------
Чтобы решить данную проблему в Java 8 при достижении порога TREEIFY_THRESHOLD = 8 вместо LinkedList начинает использоваться сбалансированное дерево.
Для сбалансированного дерева в худшем случае производительность = O(log(n)).
Это модифицрованный метод цепочек.

Источники:
 а) https://www.trip-mashina.ru/kak-hashmap-i-linkedhashmap-spravlyayutsya-s-kolliziyami/
 б) https://ru.wikipedia.org/wiki/%D0%A5%D0%B5%D1%88-%D1%82%D0%B0%D0%B1%D0%BB%D0%B8%D1%86%D0%B0


